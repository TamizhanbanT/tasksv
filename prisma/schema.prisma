// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
 
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Profile {
  id           Int              @id @default(autoincrement())
  email        String           @unique
  password     String
  name         String     
  parentName   String?
  parentPhone  BigInt?
  address      String?
  pincode      Int?
  phone        BigInt?
  class        Int?
  subjects     Subject[]        @relation("ProfileSubjects")
  fees         Int?
  marks        Int?
  todaysUpdate String?
  profileRoles ProfileRole[]
  createdAt    DateTime         @default(now())
  updatedAt    DateTime         @updatedAt
  createdBy    String?
  updatedBy    String
  role         String?          @default("student")

  // Mentor-Student Relations
  students     MentorStudent[]  @relation("MentorRelation")  // Profile as mentor
  mentors      MentorStudent[]  @relation("StudentRelation") // Profile as student
}

model Role {
  id           Int              @id @default(autoincrement())
  name         String           @unique
  profileRoles ProfileRole[]
}

model ProfileRole {
  profileId Int
  roleId    Int

  profile   Profile @relation(fields: [profileId], references: [id])
  role      Role    @relation(fields: [roleId], references: [id])

  @@id([profileId, roleId])
}

model Subject {
  id          Int       @id @default(autoincrement())
  subjectName String    @unique
  profiles    Profile[] @relation("ProfileSubjects")
}

model MentorStudent {
  mentorId  Int
  studentId Int

  mentor    Profile @relation("MentorRelation", fields: [mentorId], references: [id])
  student   Profile @relation("StudentRelation", fields: [studentId], references: [id])

  @@id([mentorId, studentId])
} 